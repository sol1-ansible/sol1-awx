---

# Create a CA for signing receptor certs
- name: Create a private key for the new receptor CA
  delegate_to: "{{ awx_cluster_primary_node }}"
  community.crypto.openssl_privatekey:
    path: "{{ awx_directory }}/tls/receptor-ca.key"

- name: Create certificate signing request (CSR) for the recptor CA
  delegate_to: "{{ awx_cluster_primary_node }}"
  community.crypto.openssl_csr:
    path: "{{ awx_directory }}/tls/receptor-ca.csr"
    privatekey_path: "{{ awx_directory }}/tls/receptor-ca.key"
    common_name: "AWX POC CA"
    use_common_name_for_san: false  # since we do not specify SANs, don't use CN as a SAN
    basic_constraints:
      - 'CA:TRUE'
    basic_constraints_critical: true
    key_usage:
      - keyCertSign
    key_usage_critical: true

- name: Create self-signed receptor CA certificate from CSR
  delegate_to: "{{ awx_cluster_primary_node }}"
  community.crypto.x509_certificate:
    path: "{{ awx_directory }}/tls/receptor-ca.crt"
    csr_path: "{{ awx_directory }}/tls/receptor-ca.csr"
    privatekey_path: "{{ awx_directory }}/tls/receptor-ca.key"
    provider: selfsigned

# Slurp up the cert and key and set as fact to distribute to other nodes
- name: Slurp up receptor CA crt from "{{ awx_cluster_primary_node }}"
  delegate_to: "{{ awx_cluster_primary_node }}"
  ansible.builtin.slurp:
    src: "{{ awx_directory }}/tls/receptor-ca.crt"
  register: _receptor_ca_crt

- name: Slurp up receptor CA key from "{{ awx_cluster_primary_node }}"
  delegate_to: "{{ awx_cluster_primary_node }}"
  ansible.builtin.slurp:
    src: "{{ awx_directory }}/tls/receptor-ca.key"
  register: _receptor_ca_key

- name: Set receptor_ca_crt as fact
  ansible.builtin.set_fact:
    receptor_ca_crt: "{{ _receptor_ca_crt.content | b64decode }}"

- name: Set receptor_ca_key as fact
  ansible.builtin.set_fact:
    receptor_ca_key: "{{ _receptor_ca_key.content | b64decode }}"
